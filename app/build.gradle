import cn.lliiooll.dhl.plugin.Common

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'cn.lliiooll.dhl.plugin'
    id 'org.jetbrains.kotlin.kapt'
}

android {
    compileSdk 32
    defaultConfig {
        applicationId "cn.lliiooll.pphelper"
        minSdk 26
        targetSdk 32
        versionCode Common.getBuildVersionCode(rootProject)
        //versionCode Common.getTimeStamp()
        versionName "1.0.0.${versionCode}${Common.getGitHeadRefsSuffix(rootProject)}"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled = false
        buildConfigField "long", "BUILD_TIMESTAMP", System.currentTimeMillis() + "L"

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_static"
                cppFlags "-std=c++17", "-Wall",
                        "-Qunused-arguments",
                        "-Wno-unused-value",
                        "-Wno-unused-variable",
                        "-Wno-unused-command-line-argument"
                cFlags "-std=c18", "-Wall",
                        "-Qunused-arguments",
                        "-Wno-unused-value",
                        "-Wno-unused-variable",
                        "-Wno-unused-command-line-argument"
            }
        }

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }


    }
    buildFeatures {
        prefab true
        viewBinding true
    }


    aaptOptions {
        additionalParameters("--no-version-vectors", "--allow-reserved-package-id", "--package-id", "0xcf")
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            kotlinOptions.suppressWarnings = true
        }
        debug {
            minifyEnabled false
            shrinkResources = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        compileOptions {
            kotlinOptions.freeCompilerArgs += "-Xmulti-platform"
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.22.1"
        }
    }
    System.out.println(System.getenv("KEYSTORE_PATH"))
    if (System.getenv("KEYSTORE_PATH") != null) {
        System.out.println("start sign")
        signingConfigs {
            release {
                storeFile = file(System.getenv("KEYSTORE_PATH"))
                storePassword = System.getenv("KEYSTORE_PASSWORD")
                keyAlias = System.getenv("KEY_ALIAS")
                keyPassword = System.getenv("KEY_PASSWORD")
                enableV1Signing = true
                enableV2Signing = true
            }
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.preference:preference:1.2.0'

    implementation 'com.tencent:mmkv-static:1.1.1'
    implementation 'me.laoyuyu.aria:core:3.8.16'
    implementation 'cn.hutool:hutool-all:5.8.7'
    implementation("com.github.LuckyPray:DexKit-Android:1.2.0")

    annotationProcessor 'me.laoyuyu.aria:compiler:3.8.16'
    kapt 'me.laoyuyu.aria:compiler:3.8.16'

    //compileOnly fileTree('lib')
    compileOnly project(":stub")
    compileOnly 'de.robv.android.xposed:api:82'

    def appCenterSdkVersion = '4.4.5'
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"

}
